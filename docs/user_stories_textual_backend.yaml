# B.O.S.S. Textual Screen Backend & Screen Subsystem Improvement User Stories
# Version: 1.0
# Date: 2025-08-22
# Status: Draft / Proposed
# Scope: Introduction of a Textual (Rich-based) screen backend and related operational / UX improvements

meta:
  epic: "EPIC-TXT-UI: Textual Screen Backend Introduction"
  owner: "Platform Team"
  stakeholders:
    - "Mini-App Authors"
    - "Operations"
    - "Hardware Integrators"
  non_goals:
    - "Full graphical (image) rendering in Textual"
    - "Browser kiosk replacement"
    - "Audio subsystem redesign"
  success_metrics:
    - "< 250ms first splash render on Pi 3+"
    - "< 120ms p95 per subsequent text update"
    - ">= 95% parity of display_text behavior across backends"
    - "Zero app code changes required to switch backends"

# ---------------------------------------------------------------------------
# User Stories
# ---------------------------------------------------------------------------

stories:
  - id: US-TXT-01
    title: Introduce textual screen backend option
    role: system_architect
    goal: "Add 'textual' to screen_backend config to enable Rich/Textual rendering"
    benefit: "Removes framebuffer complexity for text-centric UX"
    description: |
      Provide a new backend value 'textual'. When selected the factory creates a
      TextualScreen implementing ScreenInterface. If import or runtime constraints
  (Legacy fallback sequence removed; only textual supported now with minimal rich emergency fallback.)
    acceptance_criteria:
      - "Config validator accepts textual (case-insensitive)"
      - "Factory instantiates TextualScreen when configured and available"
      - "On import failure logs warning and falls back without crash"
      - "ScreenInterface methods display_text / clear_screen are present"
    tasks:
      - "Add dependency: textual>=0.58 (pin as needed)"
      - "Extend config model & validation"
      - "Implement minimal TextualScreen (initialize, clear_screen, display_text)"
      - "Factory switch: textual -> TextualScreen"
      - "Unit test: backend selection & fallback path"
    priority: High
  status: Done
  status_notes: "Implemented: config validation, factory instantiation, dependency added; fallback path simplified (pillow deprecated)."

  - id: US-TXT-02
    title: Non-blocking Textual rendering loop with debounce
    role: developer
    goal: "Ensure high-frequency screen_update events do not block event bus"
    benefit: "Responsive system under bursty updates"
    acceptance_criteria:
      - "Render loop runs on its own thread or asyncio task"
      - "Burst of >=20 updates in 200ms results in ≤5 actual renders (debounced)"
      - "Shutdown completes loop termination ≤1s after stop invoked"
      - "No event bus starvation (verified via metrics)"
    tasks:
      - "Asynchronous queue for inbound display commands"
      - "Time-based debounce window (e.g. 40–60ms)"
      - "Stop event integration"
      - "Unit tests: debounce & graceful stop"
    priority: High
  status: Done
  status_notes: "Threaded queue + debounce implemented (50ms). Graceful shutdown works; burst tests still missing."

  - id: US-TXT-03
    title: Screen API parity across backends
    role: mini_app_author
    goal: "Use display_text & clear_screen identically across textual/pillow/rich"
    benefit: "Zero code changes when switching backends"
    acceptance_criteria:
      - "Alignment: left/center/right consistent (top-aligned)"
      - "Unsupported methods (display_image, display_code, etc.) log one-line warning only"
      - "get_screen_size returns config dimensions"
      - "Duplicate content squelched (no redraw)"
    tasks:
      - "Implement alignment logic"
      - "Add unsupported method stubs with guarded logging"
      - "Parity unit tests (snapshot compare simplified)"
    priority: High
  status: Done
  status_notes: "display_text / clear_screen parity, alignment, duplicate suppression, display_image stub with warning."

  - id: US-TXT-04
    title: Auto backend selection (auto mode)
    role: operator
    goal: "Select best backend automatically via 'auto' setting"
    benefit: "Simpler deployments & optimal performance"
    acceptance_criteria:
      - "Config accepts 'auto'"
  - "Decision order (simplified): auto -> textual (rich only if textual import missing)"
      - "Decision logged with reason"
    tasks:
      - "Implement detection helper"
      - "Unit tests for decision matrix (mock env)"
    priority: Medium
  status: Partial
  status_notes: "Auto implemented; now always textual unless library missing (then rich fallback)."

  - id: US-TXT-05
    title: Dedicated TTY integration for textual
    role: system_integrator
    goal: "Render Textual UI on /dev/tty1 without login prompt"
    benefit: "Instant, clean full-screen UX"
    acceptance_criteria:
      - "Docs show disabling getty@tty1 and using chvt"
      - "Systemd unit example with ExecStartPre=/bin/chvt 1"
      - "Failure to chvt logs warning; continues safely"
    tasks:
      - "Doc section (deployment)"
      - "Sample unit snippet"
      - "Runtime chvt attempt with exception guard"
    priority: Medium
  status: Not Started
  status_notes: "No chvt runtime code or doc section yet."

  - id: US-TXT-06
    title: Footer status (switch & app info)
    role: end_user
    goal: "See current switch value & active app persistently"
    benefit: "Immediate contextual awareness"
    acceptance_criteria:
      - "Footer updates ≤250ms after switch_changed or app_started/app_stopped"
      - "No flicker when unchanged"
      - "Available in textual only (others ignore silently)"
    tasks:
      - "Subscribe inside TextualScreen to relevant events"
      - "Footer rendering region distinct from main content"
      - "Cache last footer state"
    priority: Medium
  status: Deferred
  status_notes: "Feature intentionally removed per product decision (no footer/status line)."

  - id: US-TXT-07
    title: Startup splash & ready sequence
    role: user
    goal: "Immediate visual confirmation at boot"
    benefit: "Confidence system is alive"
    acceptance_criteria:
      - "'Starting BOSS…' appears ≤300ms after event bus start"
      - "'BOSS Ready' replaces splash ≤1s post hardware init"
      - "No intermediate blank screen period >200ms"
    tasks:
      - "High-priority enqueue of splash before app load"
      - "Post-init ready message orchestrated by SystemManager"
      - "Timing integration test (approximate thresholds)"
    priority: High
  status: Not Started
  status_notes: "No splash/ready orchestration yet."

  - id: US-TXT-08
    title: Rendering performance metrics
    role: maintainer
    goal: "Observe rendering latency & anomalies"
    benefit: "Data-driven tuning"
    acceptance_criteria:
      - "Metrics: render_count, avg_ms, p95_ms (computed), max_ms"
      - "Warning log if max_ms >120ms or avg_ms >80ms over last 50 renders"
      - "Accessible via event_bus stats or hardware_service API"
    tasks:
      - "Metric aggregation ring buffer"
      - "API/struct extension"
      - "Unit tests for threshold triggers"
    priority: Medium
  status: Partial
  status_notes: "Ring buffer + avg/max/p95 implemented. Threshold logging & external exposure not done."

  - id: US-TXT-09
    title: Graceful degradation & fallback
    role: operator
    goal: "Automatic fallback if Textual loop crashes"
    benefit: "System continuity"
    acceptance_criteria:
      - "Unhandled exception triggers logged fallback (single line)"
      - "Fallback backend selected and initialized ≤1s"
      - "Subsequent screen updates succeed"
    tasks:
      - "Loop exception guard"
      - "Fallback orchestrator"
      - "Test induced exception scenario"
    priority: High
  status: Partial
  status_notes: "Loop crash flag present; no orchestrated automatic re-init/fallback logic added beyond manual switching. Pillow removed from auto chain."

  - id: US-TXT-10
    title: Documentation updates for textual backend
    role: technical_writer
    goal: "Clear enablement & troubleshooting instructions"
    benefit: "Reduced onboarding friction"
    acceptance_criteria:
      - "docs/docs.md updated (backend options & auto mode)"
      - "install-steps.md includes textual dep"
      - "hardware_parity.md notes textual parity constraints"
      - "Changelog entry added"
    tasks:
      - "Edit core docs"
      - "Add migration notes"
      - "Cross-link troubleshooting section"
    priority: High
  status: Partial
  status_notes: "Core docs updated (install-steps, docs.md, hardware_parity). Remaining: thorough troubleshooting rewrite & changelog entry."

  - id: US-TXT-11
    title: Systemd unit hardening for textual
    role: devops_engineer
    goal: "Robust service behavior on Pi"
    benefit: "Reliability & controlled restarts"
    acceptance_criteria:
      - "Sample unit: Restart=on-failure, ExecStartPre=chvt 1, Environment=SCREEN_BACKEND=auto"
      - "Guidance on disabling getty@tty1"
      - "Optional watchdog notes"
    tasks:
      - "Create boss-textual.service template"
      - "Doc operational checklist"
    priority: Medium
  status: Not Started
  status_notes: "No new unit template yet."

  - id: US-TXT-12
    title: Expanded test coverage for textual backend
    role: qa_engineer
    goal: "Prevent regressions across selection, debounce, fallback"
    benefit: "Confidence in releases"
    acceptance_criteria:
      - "Unit: backend selection matrix (auto mode)"
      - "Unit: debounce reduces render count in burst test"
      - "Integration: forced crash -> fallback"
      - "CI gracefully skips graphical tests when TTY absent"
    tasks:
      - "Add unit tests"
      - "Add integration harness (mock TTY)"
      - "CI skip markers"
    priority: Medium
  status: Partial
  status_notes: "Basic init + auto test only. Missing burst debounce, induced crash, env override tests."

  - id: US-TXT-13
    title: Runtime disable flag (env override)
    role: stakeholder
    goal: "Fast rollback to prior backend"
    benefit: "Operational safety"
    acceptance_criteria:
      - "If BOSS_DISABLE_TEXTUAL=1 textual ignored even if configured"
      - "Override reason logged once"
      - "No crash when flag set and backend textual"
    tasks:
      - "Env check in factory"
      - "Unit test env override precedence"
    priority: High
  status: Done
  status_notes: "BOSS_DISABLE_TEXTUAL implemented in factory; no dedicated test yet."

  - id: US-TXT-14
    title: Mini-app authoring guidance update
    role: mini_app_author
    goal: "Know textual capabilities & limits"
    benefit: "Avoid unsupported calls"
    acceptance_criteria:
      - "App template README updated (no images in textual)"
      - "display_image textual stub logs clear guidance once"
      - "Docs list migration path for future graphics (pygame or kiosk)"
    tasks:
      - "Update app_template docs"
      - "Implement one-time warning guard"
    priority: Medium
  status: Partial
  status_notes: "One-time warning implemented. App template/docs not fully updated with migration guidance."

# ---------------------------------------------------------------------------
# Cross-Cutting Technical Tasks (Non-Story Specific)
# ---------------------------------------------------------------------------
technical_tasks:
  - id: TT-TXT-LOG-REDUCE
    description: "Reduce per-update INFO logs for screen redraw to DEBUG to minimize I/O latency"
  - id: TT-TXT-METRICS-API
    description: "Expose screen metrics via system status endpoint"
  - id: TT-TXT-CI-MATRIX
    description: "Add CI job with textual installed & mocked TTY"

# ---------------------------------------------------------------------------
# Risk Register
# ---------------------------------------------------------------------------
risks:
  - id: RISK-TXT-FONT
    description: "Font rendering differences between textual char width assumptions and pixel fonts"
    mitigation: "Document monospace font requirement; provide config to set columns override"
  - id: RISK-TXT-TTY-CONTENTION
    description: "getty or other process reclaims tty1 causing flicker"
    mitigation: "Doc disabling getty; detect & warn if login prompt bytes appear"
  - id: RISK-TXT-PERF
    description: "Older Pi models may exceed render latency targets under load"
    mitigation: "Debounce + duplicate suppression + metrics threshold logging"

# End of File
